<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
using System;
using System.Text;
using System.Linq;
using System.Collections.Generic;
using ServiceStack;
using ServiceStack.OrmLite;
using WooW.Core.Server;
using WooW.Core;
using WooW.DTO;

namespace WooW.Model
{
    //
    // Parametro mod<#=modelo.Id#> modelo a insert o actualizar
    // Parametro cur<#=modelo.Id#> modelo que actualmente esta registrado
    //
    // No modifique las estructura de la llamada del metodo
    // Pude agregar a la clase propiedades, metodos o funciones
    //
    // Generado por ttModeloScriptPost
    //

    public class <#=modelo.Id#>PostConditions<#=extension#> 
    {
        public <#=modelo.Id#>PostConditions<#=extension#>(WoTargetConnection woTarget)
        {

        }
<#     foreach(Transicion tra in modelo.Diagrama.Transiciones.Where( e => e.EstadoInicial == 0 ) )
        {#> 
        // Método para el modelo <#=modelo.Id#> de post condición para la transición <#=tra.Id#> de <#=tra.EstadoInicial#> a <#=tra.EstadoFinal#>
        #region <#=modelo.Id#><#=tra.Id#>
        public void <#=modelo.Id#><#=tra.Id#><MOD>(WoTargetConnection woTarget, MOD mod<#=modelo.Id#> )
            where MOD : <#=modelo.Id#>
        {

        }
        #endregion <#=modelo.Id#><#=tra.Id#>
<#      }
    foreach(Transicion tra in modelo.Diagrama.Transiciones.Where( e => e.EstadoInicial != 0 ).OrderBy( e => e.EstadoInicial ) )
    {#> 
        // Método para el modelo <#=modelo.Id#> de post condición para la transición <#=tra.Id#> de <#=tra.EstadoInicial#> a <#=tra.EstadoFinal#>
        #region <#=modelo.Id#><#=tra.Id#>
        public void <#=modelo.Id#><#=tra.Id#><MOD>(WoTargetConnection woTarget, MOD mod<#=modelo.Id#>, MOD cur<#=modelo.Id#> )
            where MOD : <#=modelo.Id#>
        {

        }
        #endregion <#=modelo.Id#><#=tra.Id#>
<#  }#>
    }
}
<#+
public Modelo modelo { get; set; }  
public string extension { get; set; }
#>