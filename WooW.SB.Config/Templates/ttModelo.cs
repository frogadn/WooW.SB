// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 17.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace WooW.SB.Config.Templates
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using WooW.Core;
    using WooW.SB.Config;
    using WooW.SB.Config.Enum;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public partial class ttModelo : ttModeloBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write(@"// ------------------------------------------------------------------------------
// <auto-generated> 
//     Este código fue generado por una herramienta. WooW.SB ttModelo
//     Versión del runtime: 1.0.0.0
//  
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
// ------------------------------------------------------------------------------//
using System; 
using System.Runtime.Serialization;
using ServiceStack;
using ServiceStack.DataAnnotations;
using WooW.Core;
");
            
            #line 23 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"
 if ((!string.IsNullOrEmpty(modelo.Interface1)) || (!string.IsNullOrEmpty(modelo.Interface2)) || (!string.IsNullOrEmpty(modelo.Interface3))) { 
            
            #line default
            #line hidden
            this.Write("using WooW.Interface;\r\n");
            
            #line 25 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"
 } 
            
            #line default
            #line hidden
            this.Write("using WooW.Resources.Labels;\r\nusing WooW.Resources.ModelData;\r\nusing WooW.Resourc" +
                    "es.ModelLabel;\r\nusing WooW.Resources.ModelComment;\r\nusing Newtonsoft.Json;\r\n\r\n\r\n" +
                    "#nullable disable\r\n\r\nnamespace WooW.Model\r\n{\r\n\r\n");
            
            #line 38 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"
 if ((modelo.TipoModelo != WoTypeModel.CatalogSlave)
       && (modelo.TipoModelo != WoTypeModel.TransactionSlave)      
       && (modelo.TipoModelo != WoTypeModel.Request)      
       && (modelo.TipoModelo != WoTypeModel.Response)      
       && (modelo.TipoModelo != WoTypeModel.Class)      
       ) { 
            
            #line default
            #line hidden
            this.Write("    [EnumAsInt]\r\n    public enum e");
            
            #line 45 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelo.Id));
            
            #line default
            #line hidden
            this.Write("_WoState\r\n    {\r\n");
            
            #line 47 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"
      bool bInicio = true;
        foreach(Estado estado in modelo.Diagrama.Estados.OrderBy( e => e.NumId ) ) {
            if(bInicio) {
            
            #line default
            #line hidden
            this.Write("        ");
            
            #line 50 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(estado.Id));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 50 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(estado.NumId));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 51 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"
      } else {
            
            #line default
            #line hidden
            this.Write("        , ");
            
            #line 52 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(estado.Id));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 52 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(estado.NumId));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 53 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"
      }
        bInicio=false;
            
            #line default
            #line hidden
            
            #line 55 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"
      }
            
            #line default
            #line hidden
            this.Write("    }\r\n");
            
            #line 57 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"
 }
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 59 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"
  foreach(ModeloColumna col in modelo.Columnas.Where( e => ((e.TipoColumna == WoTypeColumn.EnumInt && e.ModeloId == "")))) {
    
            
            #line default
            #line hidden
            this.Write("    [EnumAsInt]\r\n    public enum e");
            
            #line 62 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelo.Id));
            
            #line default
            #line hidden
            this.Write("_");
            
            #line 62 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture((col.EsColeccion ? col.Id.Substring(0, col.Id.Length - 3) : col.Id)));
            
            #line default
            #line hidden
            this.Write("\r\n    {\r\n        ");
            
            #line 64 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(col.ToEnumInt()));
            
            #line default
            #line hidden
            this.Write("        \r\n    }\r\n");
            
            #line 66 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"
  }
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 68 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"
  foreach(ModeloColumna col in modelo.Columnas.Where( e => ((e.TipoColumna == WoTypeColumn.EnumString) && (e.ModeloId == ""))))  {
    
            
            #line default
            #line hidden
            this.Write("    public enum e");
            
            #line 70 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelo.Id));
            
            #line default
            #line hidden
            this.Write("_");
            
            #line 70 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture((col.EsColeccion ? col.Id.Substring(0, col.Id.Length - 3) : col.Id)));
            
            #line default
            #line hidden
            this.Write("\r\n    {\r\n        ");
            
            #line 72 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(col.ToEnumString()));
            
            #line default
            #line hidden
            this.Write("        \r\n    }\r\n");
            
            #line 74 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"
  }
            
            #line default
            #line hidden
            
            #line 75 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelo.ToAttributes(bClient)));
            
            #line default
            #line hidden
            this.Write("\r\n    public ");
            
            #line 76 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(IsStatic));
            
            #line default
            #line hidden
            this.Write("partial class ");
            
            #line 76 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelo.Id));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 76 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ParentClass));
            
            #line default
            #line hidden
            this.Write("\r\n    {\r\n");
            
            #line 78 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"
  if(modelo.SubTipoModelo != WoSubTypeModel.Static)
    {
            
            #line default
            #line hidden
            this.Write("        public ");
            
            #line 80 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelo.Id));
            
            #line default
            #line hidden
            this.Write("()\r\n        {\r\n");
            
            #line 82 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"
  foreach(ModeloColumna col in modelo.Columnas.Where( e => (!string.IsNullOrEmpty(e.Default)) || e.EsColeccion))  {
        if(col.EsColeccion)
        {
            
            #line default
            #line hidden
            
            #line 85 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(col.ToCollectionDefault(string.Empty)));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 86 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"
      }
        else 
        {
            
            #line default
            #line hidden
            
            #line 89 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(col.ToDefault()));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 90 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"
      }
     }
            
            #line default
            #line hidden
            this.Write("        }\r\n");
            
            #line 93 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"
  }
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 95 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"
     if ((modelo.TipoModelo == WoTypeModel.CatalogSlave)
          || (modelo.TipoModelo == WoTypeModel.TransactionSlave)) { 
            
            #line default
            #line hidden
            this.Write("\r\n        [Ignore]\r\n        [IgnoreDataMember]\r\n        public override WoSlaveAc" +
                    "cionEnum SlaveAccion { get; set; }\r\n");
            
            #line 101 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"
    }
            
            #line default
            #line hidden
            
            #line 102 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"
  foreach(ModeloColumna col2 in modelo.Columnas.OrderBy( e => e.Orden ) ) {
    
            
            #line default
            #line hidden
            
            #line 104 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(col2.ToAttributes()));
            
            #line default
            #line hidden
            this.Write("\r\n        ");
            
            #line 105 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(col2.ToProperty(modelo)));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 106 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"
  }
            
            #line default
            #line hidden
            this.Write("    }\r\n");
            
            #line 108 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"
  if((modelo.TipoModelo == WoTypeModel.Request) && (modelo.ScriptRequest.EjecutarEnBackGround))
    {
            
            #line default
            #line hidden
            this.Write("\r\n    ");
            
            #line 111 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelo.ToAttributes(bClient, "BackGround")));
            
            #line default
            #line hidden
            this.Write("\r\n    public partial class ");
            
            #line 112 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelo.Id));
            
            #line default
            #line hidden
            this.Write("BackGround ");
            
            #line 112 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ParentClass));
            
            #line default
            #line hidden
            this.Write("\r\n    {\r\n        public string BackGroundId { get; set; }\r\n\r\n        public ");
            
            #line 116 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelo.Id));
            
            #line default
            #line hidden
            this.Write("BackGround()\r\n        {\r\n        }\r\n    }\r\n");
            
            #line 120 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"
  }
            
            #line default
            #line hidden
            this.Write("}\r\n");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 122 "C:\Frog\Blazor\WooW.SB.Config\Templates\ttModelo.tt"

public Modelo modelo { get; set; }  
public Proyecto proyecto { get; set; }  
public string ParentClass { get; set; }  
public string IsStatic { get; set; }  
public bool bClient { get; set; }  

        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public class ttModeloBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        public System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
