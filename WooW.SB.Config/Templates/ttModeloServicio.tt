<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="WooW.Core" #>
<#@ import namespace="WooW.SB.Config" #>
<#@ import namespace="WooW.SB.Config.Enum" #>
<#@ import namespace="WooW.SB.UI.EnumExtension" #>
// ------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta. WooW.SB ttModeloServicio
//     Versión del runtime: 1.0.0.0
//  
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
// ------------------------------------------------------------------------------//
using WooW.Core.Server;
using WooW.Core;
using WooW.Core.Common;
using WooW.DTO;
using ServiceStack;
using ServiceStack.OrmLite;
using System.Collections.Generic;

namespace WooW.Model
{
    public partial class <#=modelo.Id#>
    {

        public static WoODataResponse<<#=modelo.Id#>> List(WoTargetConnection woTarget, <#=modelo.Id#>List ODataRequest)
        {
            return WoGenericService.ODataGet<<#=modelo.Id#>>(woTarget, ODataRequest, true);
        }


        public static <#=modelo.Id#> Get(WoTargetConnection woTarget, <#=modelo.Id#>Get GetRequest, WoGetFlags woGetFlags)
        {
            return <#=modelo.Id#>.Get(woTarget, (<#=TipoId#>)GetRequest.GetObjectId(), woGetFlags | WoGetFlags.ApplyFilter );
        }  

        public static <#=modelo.Id#> Get(WoTargetConnection woTarget, <#=modelo.Id#>Get GetRequest)
        {
            return <#=modelo.Id#>.Get(woTarget, (<#=TipoId#>)GetRequest.GetObjectId(), WoGetFlags.None | WoGetFlags.ApplyFilter);
        }  

        public static <#=modelo.Id#> Get(WoTargetConnection woTarget, <#=TipoId#> Id)
        {
            return <#=modelo.Id#>.Get(woTarget, Id, WoGetFlags.None | WoGetFlags.ApplyFilter);
        }

        public static <#=modelo.Id#> Get(WoTargetConnection woTarget, <#=TipoId#> Id, WoGetFlags woGetFlags)
        {
            return WoGenericService.Get<<#=modelo.Id#>>(woTarget, Id, woGetFlags | WoGetFlags.ApplyFilter);
        }

        public static <#=modelo.Id#> GetCheck(WoTargetConnection woTarget, <#=TipoId#> Id)
        {
            return WoGenericService.GetCheckIfNullThenExcept<<#=modelo.Id#>>(woTarget, Id, WoGetFlags.None | WoGetFlags.ApplyFilter);
        }

        public static <#=modelo.Id#> Single(WoTargetConnection woTarget, <#=modelo.Id#>Single SingleRequest, WoGetFlags woGetFlags)
        {
            return <#=modelo.Id#>.Single(woTarget, (<#=TipoId#>)SingleRequest.GetObjectId(), woGetFlags | WoGetFlags.ApplyFilter);
        }  

        public static <#=modelo.Id#> Single(WoTargetConnection woTarget, <#=modelo.Id#>Single SingleRequest)
        {
            return <#=modelo.Id#>.Single(woTarget, (<#=TipoId#>)SingleRequest.GetObjectId(), WoGetFlags.None | WoGetFlags.ApplyFilter);
        }  

        public static <#=modelo.Id#> Single(WoTargetConnection woTarget, <#=TipoId#> Id)
        {
            return <#=modelo.Id#>.Single(woTarget, Id, WoGetFlags.None | WoGetFlags.ApplyFilter);
        }

        public static <#=modelo.Id#> Single(WoTargetConnection woTarget, <#=TipoId#> Id, WoGetFlags woGetFlags)
        {
            return WoGenericService.Single<<#=modelo.Id#>>(woTarget, Id, woGetFlags | WoGetFlags.ApplyFilter);
        }

        public static <#=modelo.Id#> SingleCheck(WoTargetConnection woTarget, <#=TipoId#> Id)
        {
            return WoGenericService.SingleCheckIfNullThenExcept<<#=modelo.Id#>>(woTarget, Id, WoGetFlags.None | WoGetFlags.ApplyFilter);
        }

<#  bool bUniqueGet = (modelo.Columnas.Where( e => e.TipoDato == WoTypeData.UniqueGet ).FirstOrDefault() != null);
    if(bUniqueGet) 
    { #>
        public static <#=modelo.Id#> GetBy(WoTargetConnection woTarget, <#=modelo.Id#>GetBy GetByRequest)
        {
<#          bool Inicio = true;
            foreach(ModeloColumna col in modelo.Columnas.Where( e => e.TipoDato == WoTypeData.UniqueGet ).OrderBy( e => e.Orden )) {
                if(Inicio) { 
                    Inicio = false;#>
            return woTarget.Db.Select<<#=modelo.Id#>>(e => e.<#=col.Id#> == GetByRequest.<#=col.Id#>
<#              } 
                else
                { #>
                && e.<#=col.Id#> == GetByRequest.<#=col.Id#>
<#              } 
            } #>
                ).FirstNonDefault(); 
        }
<#  } #>

<#  foreach(Transicion tra in modelo.Diagrama.Transiciones.Where( e => e.EstadoInicial == 0 ) )
    {#>
        public static <#=modelo.Id#> Post(WoTargetConnection woTarget, <#=modelo.Id#><#=tra.Id#> dtoRequest)
        {
<#          foreach(var preconditionsFile in PreConditionsFiles) {#>
            var Pre<#=preconditionsFile.Item1#> = new <#=modelo.Id#>PreConditions<#=preconditionsFile.Item1#>(woTarget);
<#          }#>

<#          foreach(var postconditionsFile in PostConditionsFiles) {#>
            var Post<#=postconditionsFile.Item1#> = new <#=modelo.Id#>PostConditions<#=postconditionsFile.Item1#>(woTarget);
<#          }#>

            return <#=WoGenericService#>.Post<<#=modelo.Id#><#=tra.Id#>, <#=modelo.Id#>>(woTarget, dtoRequest,
                (int)e<#=modelo.Id#>_WoState.<#=modelo.Diagrama.EstadoByNum(tra.EstadoFinal)#>,
<#          if(PreConditionsFiles.Count > 0) {#>
                [
<#              foreach(var preconditionsFile in PreConditionsFiles) {#>
                    Pre<#=preconditionsFile.Item1#>.<#=modelo.Id#><#=tra.Id#>,
<#              } #>
                ],
<#          } else { #>
                null,
<#          }#>
<#          if(PostConditionsFiles.Count > 0) {#>
                [
<#              foreach(var postconditionsFile in PostConditionsFiles) {#>
                    Post<#=postconditionsFile.Item1#>.<#=modelo.Id#><#=tra.Id#>,
<#              } #>
                ]);
<#          } else { #>
                null);
<#          }#>
        }
<#  }
#>
<#  foreach(Transicion tra in modelo.Diagrama.Transiciones.Where( e => e.EstadoInicial != 0 ) )
    {
        Estado estado = modelo.Diagrama.Estados.Where( es => es.NumId == tra.EstadoFinal ).FirstOrDefault();

        if(estado == null)
            throw new Exception($"No se encontró el estado {tra.EstadoFinal} para el modelo {modelo.Id} transición {tra.Id}");

        if(estado.Tipo == eEstadoTipo.FinalAlternativo) 
        {#>
        public static <#=modelo.Id#> SoftDelete(WoTargetConnection woTarget, <#=modelo.Id#><#=tra.Id#> dtoRequest)
        {
<#          foreach(var preconditionsFile in PreConditionsFiles) {#>
            var Pre<#=preconditionsFile.Item1#> = new <#=modelo.Id#>PreConditions<#=preconditionsFile.Item1#>(woTarget);
<#          }#>

<#          foreach(var postconditionsFile in PostConditionsFiles) {#>
            var Post<#=postconditionsFile.Item1#> = new <#=modelo.Id#>PostConditions<#=postconditionsFile.Item1#>(woTarget);
<#          }#>

            return <#=WoGenericService#>.SoftDelete<<#=modelo.Id#><#=tra.Id#>, <#=modelo.Id#>>(woTarget, dtoRequest,
                (int)e<#=modelo.Id#>_WoState.<#=modelo.Diagrama.EstadoByNum(tra.EstadoInicial)#>, (int)e<#=modelo.Id#>_WoState.<#=modelo.Diagrama.EstadoByNum(tra.EstadoFinal)#>,
<#          if(PreConditionsFiles.Count > 0) {#>
                [
<#              foreach(var preconditionsFile in PreConditionsFiles) {#>
                    Pre<#=preconditionsFile.Item1#>.<#=modelo.Id#><#=tra.Id#>,
<#              } #>
                ],
<#          } else { #>
                null,
<#          }#>
<#          if(PostConditionsFiles.Count > 0) {#>
                [
<#              foreach(var postconditionsFile in PostConditionsFiles) {#>
                    Post<#=postconditionsFile.Item1#>.<#=modelo.Id#><#=tra.Id#>,
<#              } #>
                ]);
<#          } else { #>
                null);
<#          }#>
        }
<#      }
        else
        { #>
        public static <#=modelo.Id#> Put(WoTargetConnection woTarget, <#=modelo.Id#><#=tra.Id#> dtoRequest)
        {
<#          foreach(var preconditionsFile in PreConditionsFiles) {#>
            var Pre<#=preconditionsFile.Item1#> = new <#=modelo.Id#>PreConditions<#=preconditionsFile.Item1#>(woTarget);
<#          }#>

<#          foreach(var postconditionsFile in PostConditionsFiles) {#>
            var Post<#=postconditionsFile.Item1#> = new <#=modelo.Id#>PostConditions<#=postconditionsFile.Item1#>(woTarget);
<#          }#>

            return <#=WoGenericService#>.PutPatch<<#=modelo.Id#><#=tra.Id#>, <#=modelo.Id#>>(woTarget, dtoRequest, woModifyVerb.Put,
                (int)e<#=modelo.Id#>_WoState.<#=modelo.Diagrama.EstadoByNum(tra.EstadoInicial)#>, (int)e<#=modelo.Id#>_WoState.<#=modelo.Diagrama.EstadoByNum(tra.EstadoFinal)#>,
<#          if(PreConditionsFiles.Count > 0) {#>
                [
<#              foreach(var preconditionsFile in PreConditionsFiles) {#>
                    Pre<#=preconditionsFile.Item1#>.<#=modelo.Id#><#=tra.Id#>,
<#              } #>
                ],
<#          } else { #>
                null,
<#          }#>
<#          if(PostConditionsFiles.Count > 0) {#>
                [
<#              foreach(var postconditionsFile in PostConditionsFiles) {#>
                    Post<#=postconditionsFile.Item1#>.<#=modelo.Id#><#=tra.Id#>,
<#              } #>
                ]);
<#          } else { #>
                null);
<#          }#>
        }

        public static <#=modelo.Id#> Patch(WoTargetConnection woTarget, <#=modelo.Id#><#=tra.Id#> dtoRequest)
        {
<#          foreach(var preconditionsFile in PreConditionsFiles) {#>
            var Pre<#=preconditionsFile.Item1#> = new <#=modelo.Id#>PreConditions<#=preconditionsFile.Item1#>(woTarget);
<#          }#>

<#          foreach(var postconditionsFile in PostConditionsFiles) {#>
            var Post<#=postconditionsFile.Item1#> = new <#=modelo.Id#>PostConditions<#=postconditionsFile.Item1#>(woTarget);
<#          }#>

            return <#=WoGenericService#>.PutPatch<<#=modelo.Id#><#=tra.Id#>, <#=modelo.Id#>>(woTarget, dtoRequest, woModifyVerb.Patch,
                (int)e<#=modelo.Id#>_WoState.<#=modelo.Diagrama.EstadoByNum(tra.EstadoInicial)#>, (int)e<#=modelo.Id#>_WoState.<#=modelo.Diagrama.EstadoByNum(tra.EstadoFinal)#>,
<#          if(PreConditionsFiles.Count > 0) {#>
                [
<#              foreach(var preconditionsFile in PreConditionsFiles) {#>
                    Pre<#=preconditionsFile.Item1#>.<#=modelo.Id#><#=tra.Id#>,
<#              } #>
                ],
<#          } else { #>
                null,
<#          }#>
<#          if(PostConditionsFiles.Count > 0) {#>
                [
<#              foreach(var postconditionsFile in PostConditionsFiles) {#>
                    Post<#=postconditionsFile.Item1#>.<#=modelo.Id#><#=tra.Id#>,
<#              } #>
                ]);
<#          } else { #>
                null);
<#          }#>
        }

<#      }
    }#>

<#   if(modelo.bPostCondicionesExist) {
        foreach(Transicion tra in modelo.Diagrama.Transiciones.Where( e => ((modelo.TipoModelo == WoTypeModel.TransactionContable) && (e.EstadoFinal == 300)) ) ) {
#>
        public static WoConPolizaRegistraYAfectar PolizaPrevia(WoTargetConnection woTarget, <#=modelo.Id#>PolizaPrevia PolizaPreviaRequest)
        {
            var Post = new <#=modelo.Id#>PostConditions(woTarget);
            var o<#=modelo.Id#> = <#=modelo.Id#>.GetCheck(woTarget, PolizaPreviaRequest.Id);
            return Post.PolizaPrevia(woTarget, o<#=modelo.Id#>);
        }
<#      }
    }#>

<#      if ((modelo.TipoModelo == WoTypeModel.CatalogType) ||
            (modelo.TipoModelo == WoTypeModel.Catalog) ||
            (modelo.TipoModelo == WoTypeModel.Control) ||
            (modelo.TipoModelo == WoTypeModel.DataMart))
        {#>
        public static <#=modelo.Id#> Delete(WoTargetConnection woTarget, <#=TipoId#> id)
        {
            return <#=modelo.Id#>.Delete(woTarget,
                new <#=modelo.Id#>Borrar()
                {
                    Id = id
                }
            );
        }

        public static <#=modelo.Id#> Delete(WoTargetConnection woTarget, <#=modelo.Id#>Borrar dtoRequest)
        {
<#          foreach(var preconditionsFile in PreConditionsFiles) {#>
            var Pre<#=preconditionsFile.Item1#> = new <#=modelo.Id#>PreConditions<#=preconditionsFile.Item1#>(woTarget);
<#          }#>

            return WoGenericServiceCatalog.Delete<<#=modelo.Id#>Borrar, <#=modelo.Id#>>(woTarget,
                dtoRequest,
<#          if(PreConditionsFiles.Count > 0) {#>
                [
<#              foreach(var preconditionsFile in PreConditionsFiles) {#>
                    Pre<#=preconditionsFile.Item1#>.<#=modelo.Id#>Borrar,
<#              } #>
                ]
<#          } else { #>
                null
<#          }#>
            );
        }
<#      }#>  
    }
}
<#+
public Modelo modelo { get; set; }  
public string TipoId { get; set; }
public string WoGenericService { get; set; }  
public List<Tuple<string, string>> PreConditionsFiles { get; set; }  
public List<Tuple<string, string>> PostConditionsFiles { get; set; }  
#>