<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="WooW.Core" #>
<#@ import namespace="WooW.SB.Config" #>
<#@ import namespace="WooW.SB.Config.Enum" #>
<#@ import namespace="WooW.SB.UI.EnumExtension" #>
// ------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta. WooW.SB ttModeloServicioParametro
//     Versión del runtime: 1.0.0.0
//  
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
// ------------------------------------------------------------------------------//
using WooW.Core.Server;
using WooW.Core;
using WooW.Core.Common;
using WooW.DTO;
using ServiceStack;
using ServiceStack.OrmLite;
using System.Collections.Generic;

namespace WooW.Model
{
    public partial class <#=modelo.Id#>
    {

        public static <#=modelo.Id#> Get(WoTargetConnection woTarget)
        {
            return <#=modelo.Id#>.Get(woTarget, WoGetFlags.None | WoGetFlags.ApplyFilter);
        }  

        public static <#=modelo.Id#> Get(WoTargetConnection woTarget, WoGetFlags woGetFlags)
        {
            return WoGenericService.Get<<#=modelo.Id#>>(woTarget, woGetFlags | WoGetFlags.ApplyFilter);
        }  

        public static <#=modelo.Id#> Single(WoTargetConnection woTarget)
        {
            return <#=modelo.Id#>.Single(woTarget, WoGetFlags.None | WoGetFlags.ApplyFilter);
        }  

        public static <#=modelo.Id#> Single(WoTargetConnection woTarget, WoGetFlags woGetFlags)
        {
            return WoGenericService.Single<<#=modelo.Id#>>(woTarget, woGetFlags | WoGetFlags.ApplyFilter);
        }  

<#  foreach(Transicion tra in modelo.Diagrama.Transiciones.Where( e => e.EstadoInicial == 0 ) )
    {#>
        public static <#=modelo.Id#> Post(WoTargetConnection woTarget, <#=modelo.Id#><#=tra.Id#> dtoRequest)
        {
<#          foreach(var preconditionsFile in PreConditionsFiles) {#>
            var Pre<#=preconditionsFile.Item1#> = new <#=modelo.Id#>PreConditions<#=preconditionsFile.Item1#>(woTarget);
<#          }#>

<#          foreach(var postconditionsFile in PostConditionsFiles) {#>
            var Post<#=postconditionsFile.Item1#> = new <#=modelo.Id#>PostConditions<#=postconditionsFile.Item1#>(woTarget);
<#          }#>

            return <#=WoGenericService#>.Post<<#=modelo.Id#><#=tra.Id#>, <#=modelo.Id#>>(woTarget, dtoRequest,
                (int)e<#=modelo.Id#>_WoState.<#=modelo.Diagrama.EstadoByNum(tra.EstadoFinal)#>,
<#          if(PreConditionsFiles.Count > 0) {#>
                [
<#              foreach(var preconditionsFile in PreConditionsFiles) {#>
                    Pre<#=preconditionsFile.Item1#>.<#=modelo.Id#><#=tra.Id#>,
<#              } #>
                ],
<#          } else { #>
                null,
<#          }#>
<#          if(PostConditionsFiles.Count > 0) {#>
                [
<#              foreach(var postconditionsFile in PostConditionsFiles) {#>
                    Post<#=postconditionsFile.Item1#>.<#=modelo.Id#><#=tra.Id#>,
<#              } #>
                ]);
<#          } else { #>
                null);
<#          }#>
        }
<#  }
#>
<#  foreach(Transicion tra in modelo.Diagrama.Transiciones.Where( e => e.EstadoInicial != 0 ) )
    {
        Estado estado = modelo.Diagrama.Estados.Where( es => es.NumId == tra.EstadoFinal ).FirstOrDefault();

        if(estado == null)
            throw new Exception($"No se encontró el estado {tra.EstadoFinal} para el modelo {modelo.Id} transición {tra.Id}");

        if(estado.Tipo == eEstadoTipo.FinalAlternativo) 
        {#>
        public static <#=modelo.Id#> SoftDelete(WoTargetConnection woTarget, <#=modelo.Id#><#=tra.Id#> dtoRequest)
        {
<#          foreach(var preconditionsFile in PreConditionsFiles) {#>
            var Pre<#=preconditionsFile.Item1#> = new <#=modelo.Id#>PreConditions<#=preconditionsFile.Item1#>(woTarget);
<#          }#>

<#          foreach(var postconditionsFile in PostConditionsFiles) {#>
            var Post<#=postconditionsFile.Item1#> = new <#=modelo.Id#>PostConditions<#=postconditionsFile.Item1#>(woTarget);
<#          }#>

            return <#=WoGenericService#>.SoftDelete<<#=modelo.Id#><#=tra.Id#>, <#=modelo.Id#>>(woTarget, dtoRequest,
                (int)e<#=modelo.Id#>_WoState.<#=modelo.Diagrama.EstadoByNum(tra.EstadoInicial)#>, (int)e<#=modelo.Id#>_WoState.<#=modelo.Diagrama.EstadoByNum(tra.EstadoFinal)#>,
<#          if(PreConditionsFiles.Count > 0) {#>
                [
<#              foreach(var preconditionsFile in PreConditionsFiles) {#>
                    Pre<#=preconditionsFile.Item1#>.<#=modelo.Id#><#=tra.Id#>,
<#              } #>
                ],
<#          } else { #>
                null,
<#          }#>
<#          if(PostConditionsFiles.Count > 0) {#>
                [
<#              foreach(var postconditionsFile in PostConditionsFiles) {#>
                    Post<#=postconditionsFile.Item1#>.<#=modelo.Id#><#=tra.Id#>,
<#              } #>
                ]);
<#          } else { #>
                null);
<#          }#>
        }
<#      }
        else
        { #>
        public static <#=modelo.Id#> Put(WoTargetConnection woTarget, <#=modelo.Id#><#=tra.Id#> dtoRequest)
        {
<#          foreach(var preconditionsFile in PreConditionsFiles) {#>
            var Pre<#=preconditionsFile.Item1#> = new <#=modelo.Id#>PreConditions<#=preconditionsFile.Item1#>(woTarget);
<#          }#>

<#          foreach(var postconditionsFile in PostConditionsFiles) {#>
            var Post<#=postconditionsFile.Item1#> = new <#=modelo.Id#>PostConditions<#=postconditionsFile.Item1#>(woTarget);
<#          }#>

            return <#=WoGenericService#>.PutPatch<<#=modelo.Id#><#=tra.Id#>, <#=modelo.Id#>>(woTarget, dtoRequest, woModifyVerb.Put,
                (int)e<#=modelo.Id#>_WoState.<#=modelo.Diagrama.EstadoByNum(tra.EstadoInicial)#>, (int)e<#=modelo.Id#>_WoState.<#=modelo.Diagrama.EstadoByNum(tra.EstadoFinal)#>,
<#          if(PreConditionsFiles.Count > 0) {#>
                [
<#              foreach(var preconditionsFile in PreConditionsFiles) {#>
                    Pre<#=preconditionsFile.Item1#>.<#=modelo.Id#><#=tra.Id#>,
<#              } #>
                ],
<#          } else { #>
                null,
<#          }#>
<#          if(PostConditionsFiles.Count > 0) {#>
                [
<#              foreach(var postconditionsFile in PostConditionsFiles) {#>
                    Post<#=postconditionsFile.Item1#>.<#=modelo.Id#><#=tra.Id#>,
<#              } #>
                ]);
<#          } else { #>
                null);
<#          }#>
        }

        public static <#=modelo.Id#> Patch(WoTargetConnection woTarget, <#=modelo.Id#><#=tra.Id#> dtoRequest)
        {
<#          foreach(var preconditionsFile in PreConditionsFiles) {#>
            var Pre<#=preconditionsFile.Item1#> = new <#=modelo.Id#>PreConditions<#=preconditionsFile.Item1#>(woTarget);
<#          }#>

<#          foreach(var postconditionsFile in PostConditionsFiles) {#>
            var Post<#=postconditionsFile.Item1#> = new <#=modelo.Id#>PostConditions<#=postconditionsFile.Item1#>(woTarget);
<#          }#>

            return <#=WoGenericService#>.PutPatch<<#=modelo.Id#><#=tra.Id#>, <#=modelo.Id#>>(woTarget, dtoRequest, woModifyVerb.Patch,
                (int)e<#=modelo.Id#>_WoState.<#=modelo.Diagrama.EstadoByNum(tra.EstadoInicial)#>, (int)e<#=modelo.Id#>_WoState.<#=modelo.Diagrama.EstadoByNum(tra.EstadoFinal)#>,
<#          if(PreConditionsFiles.Count > 0) {#>
                [
<#              foreach(var preconditionsFile in PreConditionsFiles) {#>
                    Pre<#=preconditionsFile.Item1#>.<#=modelo.Id#><#=tra.Id#>,
<#              } #>
                ],
<#          } else { #>
                null,
<#          }#>
<#          if(PostConditionsFiles.Count > 0) {#>
                [
<#              foreach(var postconditionsFile in PostConditionsFiles) {#>
                    Post<#=postconditionsFile.Item1#>.<#=modelo.Id#><#=tra.Id#>,
<#              } #>
                ]);
<#          } else { #>
                null);
<#          }#>
        }

<#      }
    }#>
    }
}
<#+
public Modelo modelo { get; set; }  
public string WoGenericService { get; set; }  
public List<Tuple<string, string>> PreConditionsFiles { get; set; }  
public List<Tuple<string, string>> PostConditionsFiles { get; set; }  
#>