// ------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión del runtime: 17.0.0.0
//  
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace WooW.SB.BlazorGenerator.BlazorTemplates.CommonTemplates.Shared
{
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Frog\WooW.SB\WooW.SB\BlazorGenerator\BlazorTemplates\CommonTemplates\Shared\WoTemplateWoLoginLayoutRazorBlazor.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public partial class WoTemplateWoLoginLayoutRazorBlazor : WoTemplateWoLoginLayoutRazorBlazorBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("@*///----------------------------------------------------------------------------" +
                    "--------------------------------------\r\n/// Código autogenerado por la template " +
                    "WoTemplateGenericClass en el path WooW.SB\\BlazorGenerator\\BlazorTemplates\\Common" +
                    "Templates\\Shared\\WoTemplateWoLoginLayoutRazorBlazor.tt\r\n/// Genera código consis" +
                    "tente con la version de la prueba de concepto a dia 05-10-2023 En Blazor Wasm y " +
                    "Server\r\n/// Este código es auto generado y su modificación puede causar que el c" +
                    "ódigo no se comporte como deveria ademas de\r\n/// que se perderan los cambios rea" +
                    "lizados en el código al momento de la generación.\r\n///--------------------------" +
                    "--------------------------------------------------------------------------------" +
                    "--------*@\r\n\r\n@*Injeccion de la dependencia del localizer (recuperacion de etiqu" +
                    "etas y formatos en funcion de la cultura)*@\r\n@inject IStringLocalizer<App> Local" +
                    "izer\r\n\r\n@*Injeccion de la dependencia del proveedor de estado de autenticacion*@" +
                    "\r\n@inject WoAuthenticationStateProvider Provider\r\n\r\n@*Formulario*@\r\n<WoForm SetS" +
                    "tatus=\"@SetStatusWfRoot\" @ref=\"@_wfRoot\">\r\n\r\n    @*Alertas*@\r\n    <WoFormItem Co" +
                    "lSpan=\"12\"\r\n                BeginRow=\"true\">\r\n\r\n        <TemplateFragment>\r\n    " +
                    "        <WoFormAlert SetStatus=\"@SetStatusAlerts\" @ref=\"@_alerts\" />\r\n        </" +
                    "TemplateFragment>\r\n\r\n    </WoFormItem>\r\n\r\n    <WoFormGroup Caption=\"@Localizer[\"" +
                    "Login\"]\"\r\n                 ColSpan=12\r\n                 BeginRow=\"true\"\r\n       " +
                    "          SetStatus=\"@SetStatusWfgformModelForm\"\r\n    @ref=\"@_wfgformModelForm\">" +
                    "\r\n\r\n        <WoFormItem ColSpan=\"12\"\r\n                    BeginRow=\"true\"\r\n     " +
                    "               Caption=\"@Localizer[\"Usuario\"]\"\r\n                    SetStatus=\"@" +
                    "SetStatusFliUser\"\r\n        @ref=\"@_fliUser\">\r\n\r\n            <TemplateFragment>\r\n" +
                    "                <WoTextEdit Id=\"txtUser\"\r\n                            TApp=\"App\"" +
                    "\r\n                            Value=\"@_scriptsUser.Authenticate.UserName\"\r\n     " +
                    "                       IsRequired=\"@true\"\r\n                            SetStatus" +
                    "=\"@SetStatusTxtUser\"\r\n                            ValueChangedEvc=\"@User_OnChang" +
                    "e\"\r\n                            OnFocusEvc=\"@_scriptsUser.User_OnFocus\"\r\n       " +
                    "                     OnBlurEvc=\"@_scriptsUser.User_OnBlur\"\r\n                @ref" +
                    "=\"@_txtUser\" />\r\n\r\n                <WoInputAlert SetStatus=\"@SetStatusWiaUser\" @" +
                    "ref=\"@_wiaUser\" />\r\n            </TemplateFragment>\r\n\r\n        </WoFormItem>\r\n\r\n" +
                    "        <WoFormItem ColSpan=\"12\"\r\n                    BeginRow=\"true\"\r\n         " +
                    "           Caption=\"@Localizer[\"Password\"]\"\r\n                    SetStatus=\"@Set" +
                    "StatusFliPassword\"\r\n        @ref=\"@_fliPassword\">\r\n\r\n            <TemplateFragme" +
                    "nt>\r\n                <WoTextEdit Id=\"txtPassword\"\r\n                            T" +
                    "App=\"App\"\r\n                            Value=\"@_scriptsUser.Authenticate.Passwor" +
                    "d\"\r\n                            IsRequired=\"@true\"\r\n                            " +
                    "SetStatus=\"@SetStatusTxtPassword\"\r\n                            ValueChangedEvc=\"" +
                    "@Password_OnChange\"\r\n                            OnFocusEvc=\"@_scriptsUser.Passw" +
                    "ord_OnFocus\"\r\n                            OnBlurEvc=\"@_scriptsUser.Password_OnBl" +
                    "ur\"\r\n                @ref=\"@_txtPassword\" />\r\n\r\n                <WoInputAlert Se" +
                    "tStatus=\"@SetStatusWiaPassword\" @ref=\"@_wiaPassword\" />\r\n            </TemplateF" +
                    "ragment>\r\n\r\n        </WoFormItem>\r\n\r\n        <WoFormItem ColSpan=\"12\"\r\n         " +
                    "           BeginRow=\"true\"\r\n                    Caption=\"@Localizer[\"Instancia\"]" +
                    "\"\r\n                    SetStatus=\"@SetStatusFliInstance\"\r\n        @ref=\"@_fliIns" +
                    "tance\">\r\n\r\n            <TemplateFragment>\r\n                <WoTextEdit Id=\"txtIn" +
                    "stance\"\r\n                            TApp=\"App\"\r\n                            Val" +
                    "ue=\"@_scriptsUser.InstanciaUdnAsignar.Instance\"\r\n                            IsR" +
                    "equired=\"@true\"\r\n                            SetStatus=\"@SetStatusTxtInstance\"\r\n" +
                    "                            ValueChangedEvc=\"@Instance_OnChange\"\r\n              " +
                    "              OnFocusEvc=\"@_scriptsUser.Instance_OnFocus\"\r\n                     " +
                    "       OnBlurEvc=\"@_scriptsUser.Instance_OnBlur\"\r\n                @ref=\"@_txtIns" +
                    "tance\" />\r\n\r\n                <WoInputAlert SetStatus=\"@SetStatusWiaInstance\" @re" +
                    "f=\"@_wiaInstance\" />\r\n            </TemplateFragment>\r\n\r\n        </WoFormItem>\r\n" +
                    "\r\n        <WoFormItem ColSpan=\"12\"\r\n                    BeginRow=\"true\"\r\n       " +
                    "             Caption=\"@Localizer[\"Udn\"]\"\r\n                    SetStatus=\"@SetSta" +
                    "tusFliUdn\"\r\n        @ref=\"@_fliUdn\">\r\n\r\n            <TemplateFragment>\r\n        " +
                    "        <WoTextEdit Id=\"txtUdn\"\r\n                            TApp=\"App\"\r\n       " +
                    "                     Value=\"@_scriptsUser.InstanciaUdnAsignar.Udn\"\r\n            " +
                    "                IsRequired=\"@true\"\r\n                            SetStatus=\"@SetS" +
                    "tatusTxtUdn\"\r\n                            ValueChangedEvc=\"@Udn_OnChange\"\r\n     " +
                    "                       OnFocusEvc=\"@_scriptsUser.Udn_OnFocus\"\r\n                 " +
                    "           OnBlurEvc=\"@_scriptsUser.Udn_OnBlur\"\r\n                @ref=\"@_txtUdn\"" +
                    " />\r\n\r\n                <WoInputAlert SetStatus=\"@SetStatusWiaUdn\" @ref=\"@_wiaUdn" +
                    "\" />\r\n            </TemplateFragment>\r\n\r\n        </WoFormItem>\r\n\r\n        <WoFor" +
                    "mItem ColSpan=\"12\"\r\n                    BeginRow=\"true\"\r\n                    Cap" +
                    "tion=\"@Localizer[\"Anio\"]\"\r\n                    SetStatus=\"@SetStatusFliYear\"\r\n  " +
                    "      @ref=\"@_fliYear\">\r\n\r\n            <TemplateFragment>\r\n                <WoCo" +
                    "mboEdit TData=\"int\"\r\n                             TApp=\"App\"\r\n                  " +
                    "           Id=\"cmbYear\"\r\n                             Data=\"@_scriptsUser.Years\"" +
                    "\r\n                             Value=\"@_scriptsUser.InstanciaUdnAsignar.Year\"\r\n " +
                    "                            IsRequired=\"@true\"\r\n                             Set" +
                    "Status=\"@SetStatusCmbYear\"\r\n                             ValueChangedEvc=\"@Year_" +
                    "OnChange\"\r\n                             OnFocusEvc=\"@_scriptsUser.Year_OnFocus\"\r" +
                    "\n                             OnBlurEvc=\"@_scriptsUser.Year_OnBlur\"\r\n           " +
                    "                  PlaceHolder=\"Año\"\r\n                @ref=\"@_cmbYear\" />\r\n\r\n    " +
                    "            <WoInputAlert SetStatus=\"@SetStatusWiaYear\" @ref=\"@_wiaYear\" />\r\n   " +
                    "         </TemplateFragment>\r\n\r\n        </WoFormItem>\r\n\r\n        <WoFormItem Col" +
                    "Span=\"12\"\r\n                    BeginRow=\"true\"\r\n                    Caption=\"@Lo" +
                    "calizer[\"InstanceType\"]\"\r\n                    SetStatus=\"@SetStatusFliInstanceTy" +
                    "pe\"\r\n        @ref=\"@_fliInstanceType\">\r\n\r\n            <TemplateFragment>\r\n      " +
                    "          <WoComboEdit Id=\"cmbInstanceType\"\r\n                             TApp=\"" +
                    "App\"\r\n                             TData=\"tWoIntanciaType\"\r\n                    " +
                    "         Data=\"@(Enum.GetValues(typeof(tWoIntanciaType)).OfType<tWoIntanciaType>" +
                    "().ToList())\"\r\n                             Value=\"@_scriptsUser.InstanciaUdnAsi" +
                    "gnar.InstanceType\"\r\n                             IsRequired=\"@true\"\r\n           " +
                    "                  SetStatus=\"@SetStatusTxtInstanceType\"\r\n                       " +
                    "      ValueChangedEvc=\"@InstanceType_OnChange\"\r\n                             OnF" +
                    "ocusEvc=\"@_scriptsUser.InstanceType_OnFocus\"\r\n                             OnBlu" +
                    "rEvc=\"@_scriptsUser.InstanceType_OnBlur\"\r\n                @ref=\"@_cmbInstanceTyp" +
                    "e\" />\r\n\r\n                <WoInputAlert SetStatus=\"@SetStatusWiaInstanceType\" @re" +
                    "f=\"@_wiaInstanceType\" />\r\n            </TemplateFragment>\r\n\r\n        </WoFormIte" +
                    "m>\r\n\r\n        <WoFormItem ColSpan=\"4\"\r\n                    BeginRow\r\n           " +
                    "          SetStatus=\"SetStatusFliLogin\">\r\n             <TemplateFragment>\r\n     " +
                    "            <WoButton \r\n                           Id=\"btnLogin\"\r\n              " +
                    "             OnClickEvc=\"@Login_OnClick\"\r\n                           Caption=\"@L" +
                    "ocalizer[\"Login\"]\"\r\n                           Icon=\"eBoostrapIcons.boxarrowinri" +
                    "ght\"\r\n                           SetStatus=\"@SetStatusBtnLogin\"\r\n               " +
                    "  @ref=\"_btnLogin\" />\r\n\r\n             </TemplateFragment>\r\n         </WoFormItem" +
                    ">\r\n\r\n\r\n     </WoFormGroup>\r\n </WoForm>\r\n");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public class WoTemplateWoLoginLayoutRazorBlazorBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        public System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
